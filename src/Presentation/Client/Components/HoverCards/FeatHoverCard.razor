@using PathfinderCampaignManager.Domain.Entities.Pathfinder
@inject IJSRuntime JSRuntime

<div class="feat-hover-card @(IsVisible ? "visible" : "")" 
     style="top: @(_position.Y)px; left: @(_position.X)px;"
     @onmouseenter="OnMouseEnter"
     @onmouseleave="OnMouseLeave">
    
    @if (Feat != null)
    {
        <div class="hover-card-header">
            <div class="feat-title-section">
                <h5 class="feat-name">@Feat.Name</h5>
                <div class="feat-meta">
                    <span class="feat-level badge bg-primary">Level @Feat.Level</span>
                    <span class="feat-type badge bg-secondary">@Feat.Type</span>
                    @if (!string.IsNullOrEmpty(Feat.Rarity) && Feat.Rarity != "Common")
                    {
                        <span class="feat-rarity badge bg-warning">@Feat.Rarity</span>
                    }
                </div>
            </div>
            @if (Feat.Traits.Any())
            {
                <div class="feat-traits">
                    @foreach (var trait in Feat.Traits.Take(5))
                    {
                        <span class="trait-badge">@trait</span>
                    }
                    @if (Feat.Traits.Count > 5)
                    {
                        <span class="trait-badge">+@(Feat.Traits.Count - 5)</span>
                    }
                </div>
            }
        </div>

        <div class="hover-card-body">
            @if (Feat.Prerequisites.Any())
            {
                <div class="feat-prerequisites">
                    <strong>Prerequisites:</strong>
                    <ul class="prerequisite-list">
                        @foreach (var prereq in Feat.Prerequisites.Take(3))
                        {
                            <li class="@(ValidatePrerequisite(prereq) ? "text-success" : "text-danger")">
                                @FormatPrerequisite(prereq)
                                @if (ValidatePrerequisite(prereq))
                                {
                                    <i class="fas fa-check ms-1"></i>
                                }
                                else
                                {
                                    <i class="fas fa-times ms-1"></i>
                                }
                            </li>
                        }
                        @if (Feat.Prerequisites.Count > 3)
                        {
                            <li class="text-muted">
                                <em>+@(Feat.Prerequisites.Count - 3) more prerequisites...</em>
                            </li>
                        }
                    </ul>
                </div>
            }

            @if (!string.IsNullOrEmpty(Feat.ActionCost) || !string.IsNullOrEmpty(Feat.Frequency))
            {
                <div class="feat-action-info">
                    @if (!string.IsNullOrEmpty(Feat.ActionCost))
                    {
                        <div class="action-detail">
                            <strong>Actions:</strong> @GetActionCostDisplay()
                        </div>
                    }
                    @if (!string.IsNullOrEmpty(Feat.Frequency))
                    {
                        <div class="action-detail">
                            <strong>Frequency:</strong> @Feat.Frequency
                        </div>
                    }
                    @if (!string.IsNullOrEmpty(Feat.Trigger))
                    {
                        <div class="action-detail">
                            <strong>Trigger:</strong> @Feat.Trigger
                        </div>
                    }
                    @if (!string.IsNullOrEmpty(Feat.Requirements))
                    {
                        <div class="action-detail">
                            <strong>Requirements:</strong> @Feat.Requirements
                        </div>
                    }
                </div>
            }

            <div class="feat-description">
                @((MarkupString)FormatDescription(Feat.Description))
            </div>

            @if (Feat.Effects.Any())
            {
                <div class="feat-effects">
                    <strong>Effects:</strong>
                    @foreach (var effect in Feat.Effects.Take(2))
                    {
                        <div class="feat-effect">
                            <span class="effect-type">@effect.Type:</span>
                            <span class="effect-description">@effect.Target (@effect.Value)</span>
                        </div>
                    }
                    @if (Feat.Effects.Count > 2)
                    {
                        <div class="effects-more">
                            <em>+@(Feat.Effects.Count - 2) more effects...</em>
                        </div>
                    }
                </div>
            }

            @if (!string.IsNullOrEmpty(Feat.SpecialText))
            {
                <div class="feat-special">
                    <strong>Special:</strong> @Feat.SpecialText
                </div>
            }
        </div>

        <div class="hover-card-footer">
            <div class="feat-source">
                <small class="text-muted">@Feat.Source</small>
            </div>
            @if (ShowViewDetailsButton)
            {
                <button class="btn btn-sm btn-outline-primary" @onclick="ViewDetails">
                    <i class="fas fa-info-circle me-1"></i>
                    View Details
                </button>
            }
        </div>
    }
</div>

<style>
.feat-hover-card {
    position: fixed;
    z-index: 9999;
    background: white;
    border: 2px solid var(--bs-success);
    border-radius: 8px;
    padding: 1rem;
    max-width: 420px;
    box-shadow: 0 8px 24px rgba(0,0,0,0.15);
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.2s ease, visibility 0.2s ease;
    pointer-events: none;
    font-size: 0.875rem;
    line-height: 1.4;
}

.feat-hover-card.visible {
    opacity: 1;
    visibility: visible;
    pointer-events: auto;
}

.hover-card-header {
    margin-bottom: 0.75rem;
    padding-bottom: 0.5rem;
    border-bottom: 1px solid var(--bs-border-color);
}

.feat-title-section {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 0.5rem;
}

.feat-name {
    margin: 0;
    font-size: 1.1rem;
    font-weight: 600;
    color: var(--bs-success);
    flex: 1;
    margin-right: 0.5rem;
}

.feat-meta {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
    align-items: flex-end;
}

.feat-meta .badge {
    font-size: 0.7rem;
    padding: 0.25rem 0.4rem;
}

.feat-traits {
    display: flex;
    flex-wrap: wrap;
    gap: 0.25rem;
}

.trait-badge {
    display: inline-block;
    padding: 0.2rem 0.4rem;
    background: var(--bs-light);
    color: var(--bs-body-color);
    border-radius: 0.25rem;
    font-size: 0.65rem;
    font-weight: 500;
    border: 1px solid var(--bs-border-color);
}

.hover-card-body {
    margin-bottom: 0.75rem;
}

.feat-prerequisites {
    margin-bottom: 0.75rem;
    padding: 0.5rem;
    background: var(--bs-warning-bg-subtle);
    border-radius: 0.25rem;
    border-left: 3px solid var(--bs-warning);
}

.prerequisite-list {
    margin: 0.25rem 0 0 0;
    padding-left: 1.2rem;
}

.prerequisite-list li {
    margin-bottom: 0.2rem;
    font-size: 0.8rem;
}

.feat-action-info {
    margin-bottom: 0.75rem;
    padding: 0.5rem;
    background: var(--bs-info-bg-subtle);
    border-radius: 0.25rem;
    border-left: 3px solid var(--bs-info);
}

.action-detail {
    margin-bottom: 0.25rem;
    font-size: 0.8rem;
}

.action-detail:last-child {
    margin-bottom: 0;
}

.action-detail strong {
    color: var(--bs-info);
    margin-right: 0.25rem;
}

.feat-description {
    margin-bottom: 0.75rem;
    color: var(--bs-body-color);
}

.feat-description p {
    margin-bottom: 0.5rem;
}

.feat-description p:last-child {
    margin-bottom: 0;
}

.feat-effects {
    margin-bottom: 0.75rem;
    padding: 0.5rem;
    background: var(--bs-success-bg-subtle);
    border-radius: 0.25rem;
    border-left: 3px solid var(--bs-success);
}

.feat-effect {
    margin-bottom: 0.25rem;
    font-size: 0.8rem;
}

.feat-effect:last-child {
    margin-bottom: 0;
}

.effect-type {
    font-weight: 600;
    color: var(--bs-success);
    margin-right: 0.25rem;
}

.effects-more {
    margin-top: 0.25rem;
    font-size: 0.75rem;
    font-style: italic;
}

.feat-special {
    padding: 0.5rem;
    background: var(--bs-primary-bg-subtle);
    border-radius: 0.25rem;
    border-left: 3px solid var(--bs-primary);
    margin-bottom: 0.5rem;
    font-size: 0.8rem;
}

.hover-card-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-top: 0.5rem;
    border-top: 1px solid var(--bs-border-color);
}

.feat-source {
    flex: 1;
}

/* Action cost icons */
.action-cost-icon {
    display: inline-block;
    width: 16px;
    height: 16px;
    border-radius: 50%;
    background: var(--bs-dark);
    color: white;
    text-align: center;
    line-height: 16px;
    font-size: 10px;
    font-weight: bold;
    margin-right: 0.25rem;
}

.action-cost-icon.free {
    background: var(--bs-info);
}

.action-cost-icon.reaction {
    background: var(--bs-warning);
}

/* Responsive adjustments */
@*@*@media (max-width: 768px) {
    .feat-hover-card {
        max-width: 90vw;
        font-size: 0.8rem;
    }
    
    .feat-title-section {
        flex-direction: column;
        align-items: flex-start;
    }
    
    .feat-meta {
        flex-direction: row;
        align-items: center;
        margin-top: 0.25rem;
    }
}
</style>