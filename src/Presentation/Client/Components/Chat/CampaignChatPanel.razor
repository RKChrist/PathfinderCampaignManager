@using PathfinderCampaignManager.Presentation.Shared.Models
@using PathfinderCampaignManager.Domain.Enums

<div class="campaign-chat-panel">
    <div class="chat-header">
        <h5><i class="fas fa-comments"></i> Campaign Chat</h5>
        <div class="chat-actions">
            <button class="btn btn-sm btn-outline-secondary" @onclick="ScrollToBottom">
                <i class="fas fa-arrow-down"></i>
            </button>
            <button class="btn btn-sm btn-outline-secondary" @onclick="ToggleChatSettings">
                <i class="fas fa-cog"></i>
            </button>
        </div>
    </div>

    <div class="chat-messages" @ref="messagesContainer">
        @if (Messages?.Any() == true)
        {
            @foreach (var message in Messages.OrderBy(m => m.CreatedAt))
            {
                <div class="message-item @GetMessageClass(message)">
                    <div class="message-header">
                        <span class="message-author">@message.AuthorName</span>
                        <span class="message-time">@message.CreatedAt.ToString("HH:mm")</span>
                        @if (message.IsPrivate)
                        {
                            <span class="message-private-badge">
                                <i class="fas fa-lock"></i> Private
                            </span>
                        }
                    </div>
                    <div class="message-content">
                        @if (message.Type == CampaignChatMessageType.DiceRoll)
                        {
                            <div class="dice-roll-message">
                                <i class="fas fa-dice"></i>
                                <strong>@message.Content</strong>
                                @if (!string.IsNullOrEmpty(message.DiceResult))
                                {
                                    <span class="dice-result">@message.DiceResult</span>
                                }
                            </div>
                        }
                        else if (message.Type == CampaignChatMessageType.System)
                        {
                            <div class="system-message">
                                <i class="fas fa-info-circle"></i>
                                @message.Content
                            </div>
                        }
                        else
                        {
                            <div class="regular-message">
                                @message.Content
                            </div>
                        }
                    </div>
                </div>
            }
        }
        else
        {
            <div class="no-messages">
                <i class="fas fa-comments-slash"></i>
                <p>No messages yet. Start the conversation!</p>
            </div>
        }
    </div>

    <div class="chat-input-section">
        @if (_showDiceRoller)
        {
            <div class="dice-roller">
                <div class="dice-input-group">
                    <input type="text" @bind="_diceExpression" placeholder="1d20+5" class="form-control" />
                    <input type="text" @bind="_diceDescription" placeholder="Attack roll" class="form-control" />
                    <button class="btn btn-primary" @onclick="RollDice">
                        <i class="fas fa-dice"></i>
                    </button>
                    <button class="btn btn-secondary" @onclick="CloseDiceRoller">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            </div>
        }

        <div class="message-input-group">
            <textarea @bind="_newMessage" 
                     @onkeydown="HandleKeyDown"
                     placeholder="Type your message... (Shift+Enter for new line)" 
                     class="form-control message-input"
                     rows="2"></textarea>
            
            <div class="input-actions">
                <button class="btn btn-sm btn-outline-secondary" @onclick="ShowDiceRoller" title="Roll Dice">
                    <i class="fas fa-dice"></i>
                </button>
                
                @if (IsDM)
                {
                    <button class="btn btn-sm @(_isPrivateMessage ? "btn-warning" : "btn-outline-warning")" 
                            @onclick="TogglePrivateMessage" 
                            title="Private Message">
                        <i class="fas fa-lock"></i>
                    </button>
                }
                
                <button class="btn btn-primary btn-sm" @onclick="SendMessage" disabled="@string.IsNullOrWhiteSpace(_newMessage)">
                    <i class="fas fa-paper-plane"></i>
                </button>
            </div>
        </div>
    </div>
</div>

<style>
.campaign-chat-panel {
    display: flex;
    flex-direction: column;
    height: 100%;
    background: var(--surface-background);
    border-radius: 0.5rem;
    border: 1px solid var(--border-color);
}

.chat-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem;
    border-bottom: 1px solid var(--border-color);
    background: var(--primary-color-10);
}

.chat-header h5 {
    margin: 0;
    color: var(--text-primary);
    font-weight: 600;
}

.chat-actions {
    display: flex;
    gap: 0.5rem;
}

.chat-messages {
    flex: 1;
    overflow-y: auto;
    padding: 1rem;
    max-height: 400px;
    min-height: 200px;
}

.message-item {
    margin-bottom: 1rem;
    padding: 0.75rem;
    border-radius: 0.375rem;
    border: 1px solid var(--border-color);
    background: white;
}

.message-item.private {
    background: var(--warning-color-10);
    border-color: var(--warning-color-20);
}

.message-item.system {
    background: var(--info-color-10);
    border-color: var(--info-color-20);
}

.message-item.dice-roll {
    background: var(--success-color-10);
    border-color: var(--success-color-20);
}

.message-header {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin-bottom: 0.5rem;
    font-size: 0.875rem;
}

.message-author {
    font-weight: 600;
    color: var(--primary-color);
}

.message-time {
    color: var(--text-secondary);
    font-size: 0.75rem;
}

.message-private-badge {
    background: var(--warning-color);
    color: white;
    padding: 0.125rem 0.375rem;
    border-radius: 0.25rem;
    font-size: 0.675rem;
    font-weight: 600;
}

.message-content {
    color: var(--text-primary);
    line-height: 1.4;
}

.dice-roll-message {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    color: var(--success-color);
}

.dice-result {
    background: var(--success-color);
    color: white;
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
    font-weight: 600;
    font-family: monospace;
}

.system-message {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    color: var(--info-color);
    font-style: italic;
}

.no-messages {
    text-align: center;
    color: var(--text-secondary);
    padding: 2rem;
}

.no-messages i {
    font-size: 2rem;
    margin-bottom: 1rem;
    opacity: 0.5;
}

.chat-input-section {
    padding: 1rem;
    border-top: 1px solid var(--border-color);
    background: var(--surface-background);
}

.dice-roller {
    margin-bottom: 0.75rem;
}

.dice-input-group {
    display: flex;
    gap: 0.5rem;
    align-items: center;
}

.dice-input-group input {
    flex: 1;
}

.message-input-group {
    display: flex;
    gap: 0.75rem;
    align-items: flex-end;
}

.message-input {
    flex: 1;
    resize: vertical;
    min-height: 60px;
}

.input-actions {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
}

/* Scrollbar styling */
.chat-messages::-webkit-scrollbar {
    width: 6px;
}

.chat-messages::-webkit-scrollbar-track {
    background: var(--border-color);
    border-radius: 3px;
}

.chat-messages::-webkit-scrollbar-thumb {
    background: var(--text-secondary);
    border-radius: 3px;
}

.chat-messages::-webkit-scrollbar-thumb:hover {
    background: var(--primary-color);
}

@@media (max-width: 768px) {
    .message-input-group {
        flex-direction: column;
        align-items: stretch;
    }
    
    .input-actions {
        flex-direction: row;
        justify-content: space-between;
    }
    
    .dice-input-group {
        flex-wrap: wrap;
    }
    
    .dice-input-group input {
        min-width: 120px;
    }
}
</style>